type Pass<T> = {
    _tag: 'pass';
    value: T;
    error: null;
};
type Fail<E> = {
    _tag: 'fail';
    value: null;
    error: E;
};
/**
 * @desc 왜 실패했니? 중요한건 과정이야
 * @type {Pass<T>} 성공
 * @type {Fail<E>} 실패
 */
export type Try<E, T> = Pass<T> | Fail<E>;
export declare const passed: <T>(value: T) => Pass<T>;
export declare const failed: <E>(error: E) => Fail<E>;
export declare const castTry: <E, T>(value: T, error: E, conditionFn: (v: T) => boolean) => Try<E, T>;
export declare const isPass: <T>(o: Try<unknown, T>) => o is Pass<T>;
export declare const isFail: <E>(o: Try<E, unknown>) => o is Fail<E>;
export {};
